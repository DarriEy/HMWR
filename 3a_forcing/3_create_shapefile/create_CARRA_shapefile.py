#!/usr/bin/env python
# coding: utf-8

# Make CARRA shapefile
# This script creates a shapefile representing the CARRA grid for Iceland.

# modules
import os
import sys
import shapefile
import numpy as np
import xarray as xr
import geopandas as gpd
import rasterio
from rasterio.warp import transform
from pathlib import Path
from shutil import copyfile
from datetime import datetime
import pyproj
from pyproj import Transformer
import rasterstats

sys.path.append(str(Path(__file__).resolve().parent.parent.parent))
from utils.control_file_utils import read_from_control, make_default_path

# ---- Control file handling
# Easy access to control file folder
controlFolder = Path('../../0_control_files')
controlFile = 'control_Iceland.txt'

# --- Find location of merged forcing data
mergePath = read_from_control(controlFolder/controlFile, 'forcing_carra_merged_path')
if mergePath == 'default':
    mergePath = make_default_path(controlFolder, controlFile,'forcing/1b_CARRA')
else:
    mergePath = Path(mergePath)

# --- Find where the shapefile needs to go
shapePath = read_from_control(controlFolder/controlFile, 'forcing_shape_path')
if shapePath == 'default':
    shapePath = make_default_path(controlFolder, controlFile,'shapefiles/forcing')
else:
    shapePath = Path(shapePath)

# Find name of the new shapefile
shapeName = read_from_control(controlFolder/controlFile, 'forcing_carra_shape_name')

# Find the names of the latitude and longitude fields
field_lat = read_from_control(controlFolder/controlFile, 'forcing_shape_lat_name')
field_lon = read_from_control(controlFolder/controlFile, 'forcing_shape_lon_name')

# --- Read the source file to find the grid
for file in os.listdir(mergePath):
    if file.endswith('12.nc'):
        forcing_file = file
        break

# Open the file and get the coordinates
ds = xr.open_dataset(mergePath / forcing_file)
lats = ds.latitude.values
lons = ds.longitude.values

# Define the CARRA projection
carra_proj = pyproj.CRS('+proj=stere +lat_0=90 +lat_ts=90 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6356752.3142 +units=m +no_defs')
wgs84 = pyproj.CRS('EPSG:4326')

transformer = Transformer.from_crs(carra_proj, wgs84, always_xy=True)
# Create a transformer object for converting lat/lon to CARRA coordinates
transformer_to_carra = Transformer.from_crs(wgs84, carra_proj, always_xy=True)

# Create the new shape
with shapefile.Writer(str(shapePath / shapeName)) as w:
    w.autoBalance = 1
    w.field("ID", 'N')
    w.field(field_lat, 'F', decimal=6)
    w.field(field_lon, 'F', decimal=6)
    ID = 0

    for i in range(len(lons)):
        # Convert lat/lon to CARRA coordinates
        x, y = transformer_to_carra.transform(lons[i], lats[i])
        
        # Define grid cell (assuming 2.5 km resolution)
        half_dx = 1250  # meters
        half_dy = 1250  # meters
        
        vertices = [
            (x - half_dx, y - half_dy),
            (x - half_dx, y + half_dy),
            (x + half_dx, y + half_dy),
            (x + half_dx, y - half_dy),
            (x - half_dx, y - half_dy)
        ]
        
        # Convert vertices back to lat/lon
        lat_lon_vertices = [transformer.transform(vx, vy) for vx, vy in vertices]
        
        w.poly([lat_lon_vertices])
        center_lon, center_lat = transformer.transform(x, y)
        w.record(ID, center_lat, center_lon)
        ID += 1

# --- Add elevation data to the shape
# Assuming you have a MERIT DEM file for Iceland
dem_path = make_default_path(controlFolder, controlFile,'parameters/dem/5_elevation/elevation.tif')

# Open shapefile
shp = gpd.read_file(shapePath / shapeName)
shp = shp.set_crs('EPSG:4326')

# Calculate zonal statistics (mean elevation) for each grid cell
zs = rasterstats.zonal_stats(shp, str(dem_path), stats=['mean'])

# Add mean elevation to the GeoDataFrame
shp['elev_m'] = [item['mean'] for item in zs]

# Overwrite the existing shapefile
shp.to_file(shapePath / shapeName)

# --- Code provenance
logFolder = '_workflow_log'
Path(shapePath / logFolder).mkdir(parents=True, exist_ok=True)

thisFile = 'create_CARRA_shapefile.py'
copyfile(thisFile, shapePath / logFolder / thisFile)

now = datetime.now()

logFile = now.strftime('%Y%m%d') + '_CARRA_shapefile_log.txt'
with open(shapePath / logFolder / logFile, 'w') as file:
    lines = [
        f'Log generated by {thisFile} on {now.strftime("%Y/%m/%d %H:%M:%S")}\n',
        'Created CARRA grid shapefile for Iceland with mean elevation from DEM for each grid cell.'
    ]
    for txt in lines:
        file.write(txt)

print("CARRA shapefile creation completed.")